version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-ecs: circleci/aws-ecs@2.2.1
jobs:
  test-and-build-dev:
    docker:
      - image: circleci/python:3.8
        environment:
          MIX_ENV: prod
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
         key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      # build and push Docker image
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

workflows:
  version: 2
  test-and-build:
    jobs:
      - test-and-build-dev
      - aws-ecr/build-and-push-image:
          repo: "python_rest_api"
          tag: "${CIRCLE_BRANCH}_latest"
          requires:
            - test-and-build-dev
          filters:
            branches:
              only:
                - main
                - develop
      - aws-ecs/deploy-service-update:
          name: deploy-development
          requires:
            - aws-ecr/build-and-push-image
          family: "python_rest_api_task"
          cluster-name: "PythonRestApiProdClus"
          service-name: "python_rest_api_service"
          container-image-name-updates: "container=python_rest_api_container_prod,tag=${CIRCLE_BRANCH}_latest"
          filters:
            branches:
              only:
                - develop
      - aws-ecs/deploy-service-update:
          name: deploy-staging
          requires:
            - aws-ecr/build-and-push-image
          family: "python_rest_api_task"
          cluster-name: "PythonRestApiProdClus"
          service-name: "python_rest_api_service"
          container-image-name-updates: "container=python_rest_api_container_prod,tag=${CIRCLE_BRANCH}_latest"
          filters:
            branches:
              only:
                - main
      - approve-deploy:
          type: approval
          requires:
            - aws-ecr/build-and-push-image
          filters:
            branches:
              only:
                - main
      - aws-ecs/deploy-service-update:
          name: deploy-production
          requires:
            - approve-deploy
          family: "python_rest_api_task"
          cluster-name: "PythonRestApiProdClus"
          service-name: "python_rest_api_service"
          container-image-name-updates: "container=python_rest_api_container_prod,tag=${CIRCLE_BRANCH}_latest"
          filters:
            branches:
              only:
                - main
